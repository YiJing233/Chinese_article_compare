电子科技大学信息与软件工程学院    实 验 报 告    学    号 2017221103006         姓    名 任晓光                （实验）	课程名称 数据库原理及应用      理论教师 文军                  实验教师 何中海                    电子科技大学教务处制表    电 子 科 技 大 学 实   验   报   告 学生姓名：任晓光		学号：2017221103006  指导教师：何中海 实验地点：信软楼西303     实验时间：2019-06-14 一、实验名称：图书销售管理系统数据库 SQL 应用编程 二、实验学时：4学时 三、实验目的： 针对图书借阅管理数据库开发，掌握DDL、DML、DQL类型SQL语句在数据库操作访问中的应用方法，培养数据库SQL应用编程能力。同时也掌握基本的数据库触发器、存储过程编程方法，培养数据库后端编程能力。本实验还需要培养数据库SQL应用编程的复杂工程问题解决能力。 四、实验原理： 针对图书销售管理系统数据库开发，掌握DDL、DML、DQL类型SQL语句在BookSale数据库开发中的应用方法，完成图书销售管理数据库SQL编程操作。 图书管理系统，是一个由人、计算机等组成的能进行管理信息的收集、传递、加工、保存、维护和使用的系统。 pgAdmin，一个设计，维护和管理 Postgres 数据库用的通用工具。它能在各种平台的Windows，Linux，FreeBSD，Mac和Solaris服务器上使用。特性包括：任意 SQL 语句。可用于数据库，表，索引，序列，视图，触发器， 函数和语言的浏览器和'构造器'。用户，组和权限配置对话框。带有升级脚本生成功能的版本跟踪。Microsoft MSysConf 表的配置。数据输入和输出向导。数据库的CRUD操作。数据库迁移向导。对数据库，表，索引，序列，语言和视图预定义的报表。pgadmin 是与 Postgres 分开发布的，可以从www.pgadmin.org下载。 结构化查询语言(Structured Query Language)简称SQL(发音：/es kju el/ "S-Q-L")，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。 结构化查询语言是高级的非过程化编程语言，允许用户在高层数据结构上工作。它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式，所以具有完全不同底层结构的不同数据库系统, 可以使用相同的结构化查询语言作为数据输入与管理的接口。结构化查询语言语句可以嵌套，这使它具有极大的灵活性和强大的功能。 1986年10月，美国国家标准协会对SQL进行规范后，以此作为关系式数据库管理系统的标准语言（ANSI X3. 135-1986），1987年得到国际标准组织的支持下成为国际标准。不过各种通行的数据库系统在其实践过程中都对SQL规范作了某些编改和扩充。所以，实际上不同数据库系统之间的SQL不能完全相互通用。 五、实验内容： （1）图书销售管理系统数据库BookSale创建操作 （2）在图书销售管理系统数据库BookSale中创建数据库表、视图、索引等对象 （3）对图书销售管理系统数据库表进行数据增、删、查、改SQL操作 （4）编写函数Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。 （5）编写过程语句块，实现对函数Pro_CurrentSale的调用，并输出统计结果。 （6）编写图书销售表Insert触发器Tri_InsertSale，实现图书库存数据同步修改处理。 （7）对图书销售表Insert触发器Tri_InsertSale程序进行功能验证。 六、实验器材（设备、元器件）： 电脑 七、实验步骤： 	第一步：创建数据库 然后查看一下数据库是否被创建了：  可以看到，成功的创建了数据库 然后，创建各种数据库中的表，比如作者表，书本表，以及顾客表等，代码如下： 
 create table Auther ( AU_ID CHAR(18) not null, AU_Name VARCHAR(20) not null, AU_Gender CHAR(2) not null, AU_Phone VARCHAR(11) not null, AU_Address VARCHAR(50) not null, constraint PK_AUTHER primary key (AU_ID) ); create table Book ( Book_ISBN CHAR(13) not null, AU_ID CHAR(18) null, PUB_ID CHAR(11) null, Book_Name VARCHAR(50) not null, Book_Pubdate DATE not null, Book_Price MONEY not null, Book_Category VARCHAR(20) not null, Book_Stock INT4 not null, Book_Notes VARCHAR(100) null, Book_List VARCHAR(100) null, constraint PK_BOOK primary key (Book_ISBN) ); create table CUSTOMER ( CUST_ID CHAR(18) not null, CUST_Name VARCHAR(20) not null, CUST_Phone VARCHAR(15) not null, CUST_Address VARCHAR(50) not null, CUST_Email VARCHAR(50) not null, constraint PK_CUSTOMER primary key (CUST_ID) ); create table Publisher ( PUB_ID CHAR(11) not null, PUB_Name VARCHAR(20) not null, PUB_Phone VARCHAR(15) not null, PUB_Address VARCHAR(50) not null, constraint PK_PUBLISHER primary key (PUB_ID) ); create table Sale ( SALE_ID VARCHAR(11) not null, Book_ISBN CHAR(13) null, CUST_ID CHAR(18) null, SALE_Date DATE not null, SALE_QTY INT4 not null, SALE_Amount MONEY not null, constraint PK_SALE primary key (SALE_ID) ); create table Stock ( Stock_ID VARCHAR(10) not null, Book_ISBN CHAR(13) null, Stock_Change INT4 not null, Stock_Operation CHAR(4) not null, Stock_Datetime DATE not null, constraint PK_STOCK primary key (Stock_ID) ); alter table Book add constraint FK_BOOK_BOOK_AUTH_AUTHER foreign key (AU_ID) references Auther (AU_ID) on delete restrict on update restrict; alter table Book add constraint FK_BOOK_BOOK_PUBL_PUBLISHE foreign key (PUB_ID) references Publisher (PUB_ID) on delete restrict on update restrict; alter table Sale add constraint FK_SALE_BOOK_SALE_BOOK foreign key (Book_ISBN) references Book (Book_ISBN) on delete restrict on update restrict; alter table Sale add constraint FK_SALE_CUSTOMER__CUSTOMER foreign key (CUST_ID) references CUSTOMER (CUST_ID) on delete restrict on update restrict; alter table Stock add constraint FK_STOCK_BOOK_STOC_BOOK foreign key (Book_ISBN) references Book (Book_ISBN) on delete restrict on update restrict; 在数据库管理界面上面运行如下：  查看左边的目录，看这些表是否被创建出来了：  然后，对数据库进行插入操作，将各个表都插入一些数据，代码如下： Insert into Auther values('111111111111111111','孙悟空','男','17898726378','花果山');  Insert into Auther values('222222222222222222','玉帝','男','1234567890','天庭');  Insert into Auther values('333333333333333333','嫦娥','女','17689724356','广寒宫 ');  Insert into PUBLISHER values('PUB00000001','地球出版社','121212121212','地球');  Insert into PUBLISHER values('PUB00000002','月球出版社','456789876543','月球');  Insert into PUBLISHER values('PUB00000003','火星出版社','876543456776','火星');  Insert into BOOK values('1111111112222','111111111111111111','PUB00000001','听课技巧','1111-11-11','11','生活','999');  Insert into BOOK values('1111111113333','222222222222222222','PUB00000002','喝水技巧','1111-11-11','11','生活','999');  Insert into BOOK values('1111111114444','333333333333333333','PUB00000003','吃饭技巧','1111-11-11','11','生活','999');  Insert into customer values('555555555555555555','杨戬','14567876545','灌江口','7654321@qq.com');  Insert into customer values('666666666666666666','典韦','18612345543','许昌','8765433@qq.com');  Insert into customer values('777777777777777777','安琪拉','13623456765','王者公园','875437654@qq.com'); 在postgreSQL中运行这段代码：  查看是否已经插入，运行select语句，进行检查：  可以看到，数据已经成功的插入到了表中。 然后进行插入操作：  查看结果：  然后，进行删除操作，验证是否正确：  可以看到，显示已经删除成功了，但是还是需要再次查询确认一下：  实验修改：  修改结果如下：  4创建视图  查看视图是否成功创建：  创建触发器与触发器函数：  然后，就是对触发器进行测试，观察看看是否触发器可以正常的执行。 首先，向sale中插入数据：  八、实验结果与分析（含重要数据结果分析或核心代码流程分析） 实验已经顺利完成了，其中，对数据库表的增删改查操作都顺利完成，触发器的操作也已经顺利完成了。  在数据库插入的这个代码中，insert into 语句只要合理运用，每个数据的类型都满足要求，就可以成功的插入到表中，包括数据库的增删改查，都有特定的语句。  在创建触发器时，要创建触发器要使用到的函数，因为触发器所执行的操作，依赖于存储过程，也就是函数。 九、总结及心得体会： 	在数据库的使用中，SQL语句是一个重要的操作手段，尤其是在编写触发器函数的时候，非常重要。在编写触发器时，要注意触发器的每一步操作，都要对照触发器所依靠的那个表来进行，因为有一点错误，就会导致触发器失败。 十、对本实验过程及方法、手段的改进建议： 暂无                                                      报告评分：                                          指导教师签字： 
  电 子 科 技 大 学 实   验   报   告 学生姓名：任晓光		学号：2017221103006    指导教师：何中海  实验地点：信软楼西303   实验时间：2019-06-21 一、实验名称：图书销售管理系统数据库安全管理 二、实验学时：4学时 三、实验目的： 对图书销售管理系统数据库进行系统安全管理。了解该DBMS系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及PostgreSQL数据库角色管理、用户管理、权限管理的基本方法，培养数据库管理能力。在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。 四、实验原理： 	PowerDesigner最初由Xiao-Yun Wang（王晓昀）在SDP Technologies公司开发完成。PowerDesigner是Sybase的企业建模和设计解决方案，采用模型驱动方法，将业务与IT结合起来，可帮助部署有效的企业体系架构，并为研发生命周期管理提供强大的分析与设计技术。PowerDesigner独具匠心地将多种标准数据建模技术（UML、业务流程建模以及市场领先的数据建模）集成一体，并与 .NET、WorkSpace、PowerBuilder、Java、Eclipse 等主流开发平台集成起来，从而为传统的软件开发周期管理提供业务分析和规范的数据库设计解决方案。此外，它支持60多种关系数据库管理系统（RDBMS）/版本。PowerDesigner运行在Microsoft Windows平台上，并提供了Eclipse插件。 pgAdmin，一个设计，维护和管理 Postgres 数据库用的通用工具。它能在各种平台的Windows，Linux，FreeBSD，Mac和Solaris服务器上使用。特性包括：任意 SQL 语句。可用于数据库，表，索引，序列，视图，触发器， 函数和语言的浏览器和'构造器'。用户，组和权限配置对话框。带有升级脚本生成功能的版本跟踪。Microsoft MSysConf 表的配置。数据输入和输出向导。数据库的CRUD操作。数据库迁移向导。对数据库，表，索引，序列，语言和视图预定义的报表。pgadmin 是与 Postgres 分开发布的，可以从www.pgadmin.org下载。 结构化查询语言(Structured Query Language)简称SQL(发音：/es kju el/ "S-Q-L")，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。 结构化查询语言是高级的非过程化编程语言，允许用户在高层数据结构上工作。它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式，所以具有完全不同底层结构的不同数据库系统, 可以使用相同的结构化查询语言作为数据输入与管理的接口。结构化查询语言语句可以嵌套，这使它具有极大的灵活性和强大的功能。 1986年10月，美国国家标准协会对SQL进行规范后，以此作为关系式数据库管理系统的标准语言（ANSI X3. 135-1986），1987年得到国际标准组织的支持下成为国际标准。不过各种通行的数据库系统在其实践过程中都对SQL规范作了某些编改和扩充。所以，实际上不同数据库系统之间的SQL不能完全相互通用。  五、实验内容： （1）针对图书销售管理系统数据库，设计数据存取权限控制模型。 （2）在数据库中，创建客户（R_Customer）、商家（R_Seller）角色。 （3）在数据库中，根据业务规则为客户（R_Customer）、商家（R_Seller）角色赋予数据库对象权限。 （4）在数据库中，分别创建客户用户U_Customer、商家用户U_Seller。 （5）分别为客户用户U_Customer、商家用户U_Seller分派客户（R_Client）、商家（R_Seller）角色。 （6）分别以客户用户U_Customer、商家用户U_Seller身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。  六、实验器材（设备、元器件）： 计算机 七、实验步骤： 1、设计数据存取权限控制模型 客户  商家  2、创建客户（R_Customer）角色。  结果如下：  3、创建客户（R_Customer）角色。  查询结果如下：  授予客户权限：  然后授予商家权限：  创建两个账户，一个是客户，一个是商家：  结果如下：  使用消费者账户登录数据库：  然后进行操作，看看是否有权限： 1：查询  可以查询，下面尝试一下删除：  操作被拒绝了，没有权限，下面尝试一下查看author表：  成功了，下面查询sale表：  被拒绝了，由此可见消费者的权限是正确的，下面以商家登录数据库，查看是否正确：  查看customer表：  有权限，下面看看对author的插入权限：  有权限，成功的将数据插入到了表中。试一下从stock表中删除：  被拒绝了，看一下是否可以更新sale表：  成功修改了，证明拥有更新数据权限。 八、实验结果与分析（含重要数据结果分析或核心代码流程分析） 实验结果很成功！其中在grant授予用户权限时，需要指明用户对某个表是否有某个权限。尤其是NOCREATEDB等这些词，不可以将NO分开写，否则就会造成错误。还有就是，在实验用户的权限的时候，需要断开服务器，然后修改用户名，进行连接，才可以更换成想要实验的用户。 九、总结及心得体会： 	对于这个用户权限的控制很重要，可以保护数据库的数据不被不应该修改的角色修改。创建角色的时候要分配好权限，不然很容易造成坏用户恶意修改信息。 十、对本实验过程及方法、手段的改进建议：                                                      报告评分：                                          指导教师签字： 