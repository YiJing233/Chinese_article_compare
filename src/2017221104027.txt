
电 子 科 技 大 学 实   验   报   告  一、实验一：图书销售管理系统数据库SQL应用编程 二、实验室名称：信软楼303	           实验时间：2019年7月14日      三、实验目的 针对图书销售管理数据库开发，了解SQL语言DDL、DML、DQL类型语句在数据库操作访问中的应用方法，培养数据库SQL编程访问能力。同时也掌握基本的数据库触发器、存储过程SQL编程方法，培养数据库后端编程能力。本实验完成图书销售管理系统数据库的SQL数据操作访问和后端数据处理功能。 四、实验原理 1. 本实验中我们所使用的数据库是PostgreSQL数据库，PostgreSQL是以加州大学伯克利分校计算机系开发的 POSTGRES，现在已经更名为PostgreSQL，版本 4.2为基础的对象关系型数据库管理系统（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、外键、触发器、视图、事务完整性、MVCC。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、聚集函数、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。 使用一个软件我们应该先了解它的优点，从技术角度来讲，PostgreSQL 采用的是比较经典的C/S（client/server）结构，也就是一个客户端对应一个服务器端守护进程的模式，这个守护进程分析客户端来的查询请求，生成规划树，进行数据检索并最终把结果格式化输出后返回给客户端。为了便于客户端的程序的编写，由数据库服务器提供了统一的客户端 C 接口。而不同的客户端接口都是源自这个 C 接口，比如ODBC，JDBC，Python，Perl，Tcl，C/C++，ESQL等， 同时也要指出的是，PostgreSQL 对接口的支持也是非常丰富的，几乎支持所有类型的数据库客户端接口。这一点也可以说是 PostgreSQL 一大优点。 2. 我们在实验中需要用到的存储过程，有的数据库是和函数不一样的，但是在这里就像函数一样的创建。通过函数，可以在数据库服务器端执行指令程序。尽管这样的指令程序可以使用基本的SQL语句写成，但是由于其缺乏流程控制等功能，所以在PostgreSQL中引入了使用其它程序语言编写函数的能力。 3. 本实验中另一个比较有难度的题目是触发器（和建立表增删改查相比），触发器是由SQL语句查询所触发的事件。如：一个INSERT语句可能触发一个检查数据完整性的触发器。触发器通常由INSERT或UPDATE语句触发。在PostgreSQL中，可在数据表上设置触发器，但无法在视图中设置（对视图的UPDATE或者INSERT操作可以使用规则（RULE）定义）。多个触发器可依据字母顺序依次执行。此外，除了使用内嵌的PL/PgSQL语言之外，触发器的函数也可以用PL/Perl，PL/Python等语言编写。 4. PostgreSQL内置丰富的数据类型，包括： 任意精度的数值 无限制长度文本 几何图元 IP地址与IPv6地址 无类域间路由地址块，MAC地址 数组 此外，用户可以创建自定义数据类型，通常通过PostgreSQL的GiST机制，它们也能被很好得索引，比如PostGIS地理信息系统的数据类型。 5. 关于另一个很重要的概念视图，视图(VIEW)是一个伪表。 它不是物理表，而是作为普通表选择查询。视图也可以表示连接的表。 它可以包含表的所有行或来自一个或多个表的所选行。视图便于用户执行以下操作： 它以自然和直观的方式构建数据，并使其易于查找。 它限制对数据的访问，使得用户只能看到有限的数据而不是完整的数据。 它归总来自各种表中的数据以生成报告。 6. 索引：在创建索引时，由于我们学的比较简单，没有指明创建的索引是哪一种类型的，其实PostgreSQL有很多种的索引类型。postgresql提供的索引类型有：B-tree、hash、gist和gin。大多情况下，B-tree索引比较常用，用户可以使用create index命令创建一个B-tree索引。也就是说默认情况下我们就是创建的这一种索引。B-tree适合处理那些能够按顺序存储的数据，比如对于一些字段涉及使用：< ,<= ,= ,>= 或 >操作符之一进行比较的时候，可以建立一个索引。也可以使用B-tree索引搜索来实现与这些运算符的组合相同的构造，如BETWEEN和IN。此外，索引列上的IS NULL或IS NOT NULL条件可以与B-tree索引一起使用。对于涉及模式匹配运算符LIKE的查询，优化器还可以使用B-tree索引，如果模式是常量，并且锚定到字符串的开头，例如col LIKE 'foo％'或 col?'^ foo'，但不能是col LIKE'％bar'。 五、实验内容 使用pgAdmin4数据库管理工具对图书销售管理系统数据库进行SQL编程操作，并完成触发器、存储过程后端编程，具体实验内容如下: （1）图书销售管理系统数据库BookSale创建操作 （2）在图书销售管理系统数据库BookSale中创建数据库表、视图、索引等对象 （3）对图书销售管理系统数据库表进行数据增、删、查、改SQL操作 （4）编写存储过程Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。 （5）编写过程语句块，实现对存储过程Pro_CurrentSale的调用，并输出统计结果。 （6）编写图书销售表Insert触发器Tri_InsertSale，实现图书库存数据同步修改处理。 （7）对图书销售表Insert触发器Tri_InsertSale程序进行功能验证。 在实验计算机上，利用pgAdmin4数据库管理工具及SQL语句，完成图书销售管理系统数据库SQL应用编程操作，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。 六、实验设备及环境 “数据库原理及应用”实验所涉及的机房硬件设备为pc计算机、服务器以及网络环境，pc计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS系统： PostgreSQL 11 七、实验步骤 1.首先进行图书销售管理系统数据库BookSale创建操作。因为需要进行SQL编程操作，所以我们不使用右键然后创建数据库，这种图形界面来创建的方式。 打开工具，点击查询工具，如下图所示，就可以输入命令了。        在这里使用CREATE DATABASE BookSale;命令来创建一个数据库，创建后的结果如图所示，可以看到图形界面中，用红色框框标记的地方，出现了我们所创建的数据库。        2. 在图书销售管理系统数据库BookSale中创建数据库表、视图、索引等对象。 建立表之前，先用表格的形式把几个表的结构定义列举出来，我们可以在下表中看到，一共需要创建5个table。 表7-1 Publisher的结构定义  表7-2 PurchaseList的结构定义  表7-3 storage的结构定义  表7-4 book的结构定义  表7-5 sale的结构定义 接下来就可以完成表的创建工作的，创建表的SQL语句如下：  创建表后的结果如下图，可以看到出现了四个表被成功的创建了：             建立索引的SQL语句和运行结果如下：              建立视图，查询书的名字和书的数量，我们可以看到创建好的视图如下所示：          运行这个视图，看一下结果是什么，通过下图我们可以看到这个视图被成功的创建了，数据都正确的显示：        建立的约束如下，我们可以看到ISBN_FK还有主键的定义，主键就自动的命名了。              3. 对图书销售管理系统数据库表进行数据增、删、查、改SQL操作。 首先插入数据的SQL语句如下：  插入界面以及插入的结果                                                 删除一条数据的SQL语句如下所示： 运行成功的界面如下，可以看到删除成功。             删除后还需要再修改数据，因为刚才把三号删掉了，现在把第四号变成第三号。         4. 编写存储过程Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。 存储过程的界面以及执行结果如下                 5. 编写过程语句块，实现对存储过程Pro_CurrentSale的调用，并输出统计结果。           八、实验数据及结果分析 1. 首先检查建立表之后的建立是否成功。我们一共建立了5个表，下图中有全部的5个表，这说明建立表是成功的。         2. 然后我们再来检查视图的建立，通过在最左边的窗口观察，我们发现出现了我们所建立的视图          但是这还不够，为了验证视图的建立是成功的，我们还要检查一下视图这个虚拟表的内容。 这是一个查询书和库存的视图，我们可以看到书的名字和对应的库存都是正确的，这说明视图的建立成功。       3. 插入数据后，我们还需要检查数据插入的是否成功，就可以把这几个表的内容都显示出来，如下图所示，可以看到插入的数据都出现在了表中，对于数据的操作也是成功的。                                        九、总结及心得体会 通过本次实验使我更熟练的掌握了数据库语句的使用，对数据库语句有了更深的理解。在创建数据库之前首先先设计数据库都包括哪些表，并且设计表中的属性名、属性类型、属性长度等详细属性。 设计好这些内容之后，打开数据库使用SQL语句创建数据库表，之后使用INSERT语句插入数据，对表进行最基础的增删改查的操作。 并且对存储过程的实际使用有了新的理解，存储过程在实际的使用中确实是很有用的，创建存储过程之后，再创建触发器。    
电 子 科 技 大 学 实   验   报   告  一、实验二：图书销售管理系统数据库安全管理 二、实验室名称：信软楼303	          实验时间：2019年7月21日      三、实验目的 了解该DBMS系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及PostgreSQL数据库角色管理、用户管理、权限管理的基本方法，培养数据库管理能力。在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。 四、实验原理 权限分为两部分，一部分是“系统权限”或者数据库用户的属性，可以授予role或user（两者区别在于login权限）；一部分为数据库对象上的操作权限。对超级用户不做权限检查，其它走acl。对于数据库对象，开始只有所有者和超级用户可以做任何操作，其它走acl。在pg里，对acl模型做了简化，组和角色都是role，用户和角色的区别是角色没有login权限。 可以用下面的命令创建和删除角色， CREATE ROLEname; DROP ROLEname; 为了方便，也可以在 shell 命令上直接调用程序和，这些工具对相应命令提供了封装: createusername dropusername 数据库对象上的权限有： SELECT，INSERT，UPDATE，DELETE，RULE，REFERENCES，TRIGGER，CREATE，TEMPORARY，EXECUTE，和USAGE等，   五、实验内容 使用pgAdmin4数据库管理工具对图书销售管理系统数据库进行数据库安全管理，具体实验内容如下: （1）针对图书销售管理系统数据库，设计数据存取权限控制模型。 （2）在数据库中，创建客户（R_Customer）、商家（R_Seller）角色。 （3）在数据库中，根据业务规则为客户（R_Customer）、商家（R_Seller）角色赋予数据库对象权限。 （4）在数据库中，分别创建客户用户U_Customer、商家用户U_Seller。 （5）分别为客户用户U_Customer、商家用户U_Seller分派客户（R_Client）、商家（R_Seller）角色。 （6）分别以客户用户U_Customer、商家用户U_Seller身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。 在实验计算机上，利用pgAdmin4数据库管理工具及SQL语句，完成图书销售管理系统数据库安全管理，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。  六、实验设备及环境 “数据库原理及应用”实验所涉及的机房硬件设备为pc计算机、服务器以及网络环境，pc计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS系统： PostgreSQL 11 七、实验步骤 使用pgAdmin4数据库管理工具对图书销售管理系统数据库进行数据库安全管理，具体实验内容如下: （1）针对图书销售管理系统数据库，设计数据存取权限控制模型。  （2）在数据库中，创建客户（R_Customer）、商家（R_Seller）角色。  运行界面和运行结果如下：                  （3）在数据库中，根据业务规则为客户（R_Customer）、商家（R_Seller）角色赋予数据库对象权限。   给售卖者赋予权限  运行界面以及运行结果                    （4）在数据库中，分别创建客户用户U_Customer、商家用户U_Seller。分别为客户用户U_Customer、商家用户U_Seller分派客户（R_Client）、商家（R_Seller）角色。 创建角色的SQL语句如下  创建后的运行结果如下所示：可以看到运行成功。             （5）分别以客户用户U_Customer、商家用户U_Seller身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。用SQL shell登录我们创建的用户，可以看到登录成功。               八、实验数据及结果分析 1. 在对角色对各个数据库赋予权限后，检查他们的权限赋予情况。首先查看book表，点击属性，然后选择安全。            然后我们就能看到对于book表的各个角色的权限情况。对于R_Customer来说只能读，而对于R_seller来说既能读又能修改删除更新。         然后再用相同的办法查询另外几个表，运行结果都是配置成功的。           2. 检查我们创建的user能否成功的使用，可以打开SQL shell登录，这里我们点击SQL shell，输入对应的用户名和密码，然后成功登录，这说明我们对于用户的配置也是成功的。        我们也可以在下面的登录/组角色查一下有没有我们所建立的用户和角色，通过下图我们可以看到我们之前所创建的用户和角色都是成功的          九、总结及心得体会 通过本次实验使我更熟练的掌握了数据库语句的使用，对数据库语句有了更深的理解。对数据库权限管理也有了更深的理解，在实际场景中如何给数据库用户和角色分配合适的权限有了更深的感悟。 在实际操作场景中，要根据实际的情况给不同的角色赋予不同的权限，不然数据会不安全，系统正常稳定的运行，不会威胁到系统的安全性，不会因为角色有越界的权限而产生问题。 在本系统中如果顾客有了商户的权限，那么如果有顾客对数据库随意的修改，甚至修改自己的订单来让自己免费拿到商品，这个公司就会非常的危险了，会造成大量的损失。所以对于数据库的权限控制还是要慎重。 