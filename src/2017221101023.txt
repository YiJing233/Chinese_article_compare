电子科技大学信息与软件工程学院    实 验 报 告    学    号    2017221101023      姓    名        李豪           （实验）	课程名称   数据库原理及应用    理论教师        文军           实验教师       何中海              电子科技大学教务处制表    电 子 科 技 大 学 实   验   报   告 学生姓名：李豪		学号：2017221101023     指导教师：何中海   实验地点：信软学院楼西303     实验时间：2019.06.14 一、实验名称：实验一：图书销售管理系统数据库SQL应用编程 二、实验学时：5 三、实验目的： 针对图书借阅管理数据库开发，掌握DDL、DML、DQL类型SQL语句在数据库操作访问中的应用方法，培养数据库SQL应用编程能力。同时也掌握基本的数据库触发器、存储过程编程方法，培养数据库后端编程能力。本实验还需要培养数据库SQL应用编程的复杂工程问题解决能力。  四、实验原理： 针对图书销售管理系统数据库开发，掌握DDL、DML、DQL类型SQL语句在BookSale数据库开发中的应用方法，完成图书销售管理数据库SQL编程操作。  五、实验内容： （1）数据库对象（方案、表、索引、视图等）DDL编程应用解决数据库实现及性能优化； （2）数据库数据增、删、查、改DML编程应用解决数据操作访问； （3）数据库触发器、数据库函数编程应用解决业务规则及后端功能实现。  六、实验器材（设备、元器件）： 项目需用仪器设备名称：实验PC计算机 所需软件： PostgreSQL 11  七、实验步骤： （1）图书销售管理系统数据库BookSale创建操作 （2）在图书销售管理系统数据库BookSale中创建数据库表、视图、索引等对象 （3）对图书销售管理系统数据库表进行数据增、删、查、改SQL操作 （4）编写函数Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。 （5）编写过程语句块，实现对函数Pro_CurrentSale的调用，并输出统计结果。 （6）编写图书销售表Insert触发器Tri_InsertSale，实现图书库存数据同步修改处理。 （7）对图书销售表Insert触发器Tri_InsertSale程序进行功能验证。  八、实验结果与分析（含重要数据结果分析或核心代码流程分析） 1.创建BookSale数据库 SQL语句 create database BookSale;  执行结果     2.创建各数据库表以及表中主外键和索引 SQL语句 create table Auther (     AU_ID			CHAR(8)				not null, 	AU_Hame		VARCHAR(20)		not null, 	AU_Gender  		CHAR(2)				not null,     AU_Phone		VARCHAR(11)		not null, 	AU_Address  	VARCHAR(50)		not null,     constraint PK_AUTHER primary key (AU_ID) ); create table Book ( 	Book_ISBN		CHAR(13)			not null, 	AU_ID			CHAR(18)			null, 	PUB_ID			CHAR(11)			null,	 	Book_Name		VARCHAR(50)		not null, 	Book_Pubdate  	DATE				not null, 	Book_Price		MONEY				not null, 	Book_Category	VARCHAR(20)		not null, 	Book_Stock  		INT4				not null, 	Book_Notes		VARCHAR(100)		null, 	Book_List		VARCHAR(100)		null, 	 	constraint PK_BOOK primary key (Book_ISBN) ); create table CUSTOMER( 	CUST_ID  		CHAR(18)			not null, 	CUST_Name		VARCHAR(20)		not null, 	CUST_Phone		VARCHAR(15)		not null, 	CUST_Address	VARCHAR(50)		not null, 	CUST_Email		VARCHAR(50)		not null, 	constraint PK_CUSTOMER primary key (CUST_ID) ); create table Publisher( 	PUB_ID			CHAR(18)			not null, 	PUB_Name		VARCHAR(20)		not null, 	PUB_Phone		VARCHAR(15)		not null, 	PUB_Address		VARCHAR(50)		not null, 	constraint PK_PUBLISHER primary key (PUB_ID) ); create table Sale ( 	SALE_ID			VARCHAR(11)		not null, 	Book_ISBN			CHAR(13)			null, 	CUST_ID  			CHAR(18)			null, 	SALE_Date			DATE				not null, 	SALE_QTY			INT4				not null, 	SALE_Amount		MONEY				not null, 	constraint PK_SALE primary key (SALE_ID) ); create table Stock ( 	Stock_ID			VARCHAR(10)		not null, 	Book_ISBN		CHAR(13)			null, 	Stock_Change		INT4				not null, 	Stock_Operation	CHAR(4)				not null, 	Stock_Datetime	DATE				not null, 	constraint PK_STOCK primary key (Stock_ID) ); alter table Book       add constraint FK_BOOK_BOOK_AUTH_AUTHER foreign key (AU_ID)       references Auther (AU_ID)       on delete restrict on update restrict; alter table Book       add constraint FK_BOOK_BOOK_PUBL_PUBLISHE foreign key (PUB_ID)       references Publisher (PUB_ID)       on delete restrict on update restrict; alter table Sale       add constraint FK_SAIE_BOOK_SALE_BOOK foreign key (Book_ISBN)       references Book (Book_ISBN)       on delete restrict on update restrict; alter table Sale       add constraint FK_SALE_CUSTOMER_CUSTOMER foreign key (CUST_ID)       references CUSTOMER (CUST_ID)       on delete restrict on update restrict; alter table Stock       add constraint FK_STOCK_BOOK_STOC_BOOK foreign key (Book_ISBN)       references Book (Book_ISBN)       on delete restrict on update restrict;  执行结果    3．插入样本数据并对publisher表进行增删改查操作 1）插入样本数据 SQL语句 Insert into Auther values('33030919','王天','男','13554874593','四川省成都市成华区建设北路二段十号'); Insert into Auther values('54013519','叶无双','男','15812387538','浙江省杭州市天路区梅田路二十八号'); Insert into Auther values('12085719','李婷','女','18575615472','北京市朝阳区梅山路二巷八号'); Insert into PUBLISHER values('PUB00000001','高等教育出版社','010-65321854','北京'); Insert into PUBLISHER values('PUB00000002','电子工业出版社','010-65329857','北京'); Insert into PUBLISHER values('PUB00000003','人民邮电出版社','010-65325987','北京'); Insert into BOOK values('9787115502742','33030919','PUB00000001','Web前端开发最佳实践','2016-01-01','59','IT技术','100'); Insert into BOOK values('9875325415577','54013519','PUB00000002','Java EE Web编程','2008-01-01','52','IT技术','200'); Insert into BOOK values('9865365975234','12085719','PUB00000003','数据库实验指导','2013-08-1','29','IT技术','150'); Insert into customer values('680554199207120325','林天','15963512578','四川省成都市成华区建设北路二段十一号','450448745@qq.com'); Insert into customer values('345021198608120258','宫铃','18636598574','浙江省杭州市天路区梅田路二十九号','3657873215@qq.com'); Insert into customer values('542244197812121687','鲁丽','13615869875','北京市朝阳区梅山路二巷十六号','647864378@qq.com');  执行结果   2）增加一条数据到publisher表 SQL语句 Insert into PUBLISHER values('PUB00000004','清华大学出版社','010-65323169','北京'); 执行结果   3）删除一条publisher表数据 SQL语句 delete from publisher where pub_id='PUB00000004';  执行结果  4）修改一条publisher表数据 SQL语句 update publisher set pub_address='南京' where pub_id='PUB00000003'; 执行结果  5）查询publisher表的数据 SQL语句 select * from publisher; 执行结果  4.创建视图 SQL语句 create view BOOK_AUTHER_PUBLISHER as select B.book_name as "图书",AU.au_hame as "作者",PU.pub_name as "出版社",B.book_price as "图书价格" from book as B join auther as AU on B.au_id=AU.au_id join publisher as PU on B.pub_id=PU.pub_id; 执行结果  视图创建结果：   	5.创建触发器 SQL语句 CREATE OR REPLACE FUNCTION InsertSale1() RETURNS TRIGGER AS $$ 	BEGIN 		IF(TG_OP='INSERT')THEN 			INSERT INTO stock values(new.sale_id,new.book_isbn,new.sale_qty,'出库',new.sale_date); 			              update book set book_stock=book_stock-new.sale_qty where book.book_isbn=new.book_isbn; 			RETURN NEW; 			END IF; 			RETURN NULL; 		END; $$LANGUAGE plpgsql;  CREATE TRIGGER Tri_InsertSale0 AFTER INSERT ON SALE FOR EACH ROW EXECUTE PROCEDURE InsertSale1();  执行结果   	6.测试触发器 SQL语句                                                                       Insert into sale values('SA00001','9787115502742','680554199207120325','2019-05-20',15,'885');Insert into sale values('SA00002','9875325415577','345021198608120258','2019-05-20',20,'1040');Insert into sale values('SA00003','9865365975234','542244197812121687','2019-05-20',50,'1450'); 执行结果  之后stock表的数据  之后book表的数据   	7.创建存储过程 SQL语句 CREATE OR REPLACE FUNCTION countsale(OUT amount int,OUT allmoney money) as $count$ BEGIN 	select sum(sale_qty) into amount FROM sale WHERE sale_date='2019-05-20'; 	select sum(sale_amount) into allmoney FROM sale WHERE sale_date='2019-05-20'; END; $count$ LANGUAGE plpgsql; 执行结果   	8.调用存储过程 SQL语句 select * from countsale(); 执行结果      九、总结及心得体会： 我掌握了DDL、DML、DQL类型SQL语句在数据库操作访问中的应用方法。数据库SQL应用编程能力。同时也掌握基本的数据库触发器、存储过程编程方法，培养了我的数据库后端编程能力。训练了我数据库SQL应用编程的复杂工程问题解决能力。                                                       报告评分：                                          指导教师签字： 
  电 子 科 技 大 学 实   验   报   告 学生姓名：李豪		学号：2017221101023     指导教师：何中海   实验地点：信软学院楼西303     实验时间：2019.06.21 一、实验名称：实验二：图书销售管理系统数据库安全管理 二、实验学时：3 三、实验目的： 对图书销售管理系统数据库进行系统安全管理。了解该DBMS系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及PostgreSQL数据库角色管理、用户管理、权限管理的基本方法，培养数据库管理能力。在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。  四、实验原理： 针对图书销售管理系统数据库开发，掌握使用pgAdmin4数据库管理工具及DCL类型SQL语句在数据库安全管理中的应用方法，完成图书销售管理数据库安全管理操作，如角色管理、用户管理、权限管理等系统管理操作。  五、实验内容： （1）数据库角色、用户及权限管理； （2）图书销售管理系统数据库管理实现。  六、实验器材（设备、元器件）： 项目需用仪器设备名称：实验PC计算机 所需软件： PostgreSQL 11  七、实验步骤： （1）针对图书销售管理系统数据库，设计数据存取权限控制模型。 （2）在数据库中，创建客户（R_Customer）、商家（R_Seller）角色。 （3）在数据库中，根据业务规则为客户（R_Customer）、商家（R_Seller）角色赋予数据库对象权限。 （4）在数据库中，分别创建客户用户U_Customer、商家用户U_Seller。 （5）分别为客户用户U_Customer、商家用户U_Seller分派客户（R_Client）、商家（R_Seller）角色。 （6）分别以客户用户U_Customer、商家用户U_Seller身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。  八、实验结果与分析（含重要数据结果分析或核心代码流程分析） 1．针对图书销售管理系统数据库，设计数据存取权限控制模型      2．创建客户（R_Customer）、商家（R_Seller）角色 1）创建客户（R_Customer）角色 SQL语句 CREATE ROLE "R_Customer" WITH LOGIN NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT NOREPLICATION CONNECTION LIMIT -1 执行结果  2）创建商家（R_Seller）角色 SQL语句 CREATE ROLE "R_Seller" WITH LOGIN NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT NOREPLICATION CONNECTION LIMIT -1 执行结果  角色创建结果   3．赋予客户（R_Customer）、商家（R_Seller）角色权限 SQL语句 GRANT SELECT ON book TO "R_Customer"; GRANT SELECT ON auther TO "R_Customer"; GRANT SELECT ON publisher TO "R_Customer";  GRANT SELECT,INSERT,UPDATE,DELETE ON book TO "R_Seller"; GRANT SELECT,INSERT,UPDATE,DELETE ON auther TO "R_Seller"; GRANT SELECT,INSERT,UPDATE,DELETE ON publisher TO "R_Seller"; GRANT SELECT ON stock TO "R_Seller"; GRANT SELECT,INSERT,UPDATE,DELETE ON sale TO "R_Seller"; GRANT SELECT,INSERT,UPDATE,DELETE ON customer TO "R_Seller"; 执行结果   4．分别创建客户用户U_Customer、商家用户U_Seller，并将客户角色和商家角色赋予他们 SQL语句 CREATE USER "U_Customer" WITH LOGIN CONNECTION LIMIT -1 IN ROLE "R_Customer" PASSWORD'123456';  CREATE USER "U_Seller" WITH LOGIN CONNECTION LIMIT -1 IN ROLE "R_Seller" PASSWORD'123456'; 执行结果  	用户创建结果     5.分别以客户用户U_Customer、商家用户U_Seller身份访问图书销售管理数据库，验证是否赋予权限成功  	1）客户用户U_Customer 测试1 SQL语句 select * from book; 执行结果    测试2 SQL语句 delete from book where book_isbn='9787115502742'; 执行结果   测试3 SQL语句 select * from auther; 执行结果   测试4 SQL语句 insert into auther values('33030419','李天','男','12365748953','北京市产阳区李二街18555号'); 执行结果   	2）商家用户U_Seller 测试1 SQL语句 select * from customer; 执行结果   测试2 SQL语句 insert into auther values('33030419','李天','男','12365748953','北京市产阳区李二街18555号'); 执行结果   测试3 SQL语句 delete from stock where stock_id='SA00001'; 执行结果  测试4 SQL语句 UPDATE sale SET sale_date='2019-05-21' WHERE sale_id='SA00001'; 执行结果   九、总结及心得体会： 我了解该DBMS系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及PostgreSQL数据库角色管理、用户管理、权限管理的基本方法。在此过程中，我掌握了数据库管理能力。我还学会了在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。                                                       报告评分：                                          指导教师签字：