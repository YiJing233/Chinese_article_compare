电子科技大学信息与软件工程学院    实验报告    学    号：2017221005029 姓    名：黄心茹 （实验）	课程名称：数据库系统原理及应用 理论教师：文军 实验教师：何中海     电子科技大学教务处制表     电 子 科 技 大 学 实   验   报   告 学生姓名：黄心茹   学号：2017221005029  指导教师：何中海 一、实验一：图书销售管理系统数据库 SQL 应用编程二、实验地点：信软楼西303    实验时间：2019.06.21三、实验目的 针对图书销售管理数据库开发，了解 SQL 语言 DDL、DML、DQL 类型语句在数 据库操作访问中的应用方法，培养数据库 SQL 编程访问能力。同时也掌握基本的数据库触发器、存储过程 SQL 编程方法，培养数据库后端编程能力。本实验完成图书销售管理系统数据库的 SQL 数据操作访问和后端数据处理功能。 四、实验原理 首先对图书销售管理系统进行数据需求分析，定义组成系统数据结构的实体、实体属性以及实体之间的关系。通过建模设计工具完成系统概念数据模型设计。进一步对图书销售管理数据库进行物理模型设计，给出数据库设计方案。 基于数据库设计方案，通过 SQL 编程执行来完成对数据库的实现操作。在本实验中，使用 SQL 语句完成对数据库、关系表、索引、视图、触发器、存储过程的创建，并编写 SQL 语句对数据库表进行数据的增删查改操作，以及利用视图、存储过程、触发器实现业务数据处理。 五、实验内容 使用 pgAdmin4 数据库管理工具对图书销售管理系统数据库进行 SQL 编程操作，并完成触发器、存储过程后端编程，具体实验内容如下: 在数据库服务器中，执行 SQL 创建图书销售管理系统数据库 BookSale。 在数据库 BookSale 中，执行 SQL 创建数据库表、视图、索引等对象。 在数据库 BookSale 中，执行 SQL 进行数据增、删、查、改访问操作。 在数据库 BookSale 中， 采用 PL/pgSQL 语言编写存储过程函数 Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。 在数据库 BookSale 中，采用 PL/pgSQL 语言编写过程语句块，实现对存储过程函数 Pro_CurrentSale 的调用，并输出统计结果。 在数据库 BookSale 中，采用 PL/pgSQL 语言编写编写图书销售表 Insert 触  发器 Tri_InsertSale，实现图书库存数据同步修改处理。 在数据库 BookSale 中，对图书销售表 Insert 触发器 Tri_InsertSale 程序进行功能验证。 在数据库 BookSale 中，创建存储过程函数实现图书销售数量和金额统计。在实验计算机上，利用 pgAdmin4 数据库管理工具及 SQL、PL/pgSQL 语言， 完成图书销售管理系统数据库应用编程操作，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。 六、实验设备及环境 “数据库原理及应用”实验所涉及的机房硬件设备为 pc 计算机、服务器以及网络环境，pc 计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS 系统： PostgreSQL 11  七、实验步骤 在数据库服务器中，采用 SQL 语句执行方式，创建图书销售管理系统数据库 BookSale。 在 BookSale 数据库中，采用 SQL 语句执行方式，创建 book（图书表）、auther （作者表）、publisher（出版社表）、stock（库存流水表）、customer（客户表）、 sale（销售表），以及各表主键外键的创建，并为给表创建索引。 为 book、auther、publisher、customer 表准备样本数据，采用 SQL 语句执行方式，将样本数据插入到表中。采用 SQL 语句对 book、auther、publisher、 customer 表进行数据修改、删除、查询、统计等访问操作。 创建视图 BOOK_AUTHER_PUBLISHER，该视图查询数据库，输出图书名、作者、出版社以及图书价格等数据。对视图 Book_View 进行数据查询访问操作。 编写触发器函数，实现在 sale 表数据插入时，级联操作 stock 表，将图书的库存流水进行记录，同时级联更新 book 表中对应图书的库存数据。 创建完触发器函数之后，创建相对应的触发器，实现上一步中提到的功能。 测试触发器的功能，准备 sale 表的样本数据，并将其插入sale 表，插入之后查看 stock 表是否有对应的更新，并对比插入 sale 数据前后 book 中对应数据的修改情况。 编写存储过程函数，实现统计某日图书的销售总量以及总金额数据。 调用存储过程函数，查看输出结果是否准确实现业务数据处理功能。 八、实验数据及结果分析 （1）图书销售管理系统数据库BookSale创建操作  在图书销售管理系统数据库BookSale中创建数据库表、视图、索引等对象 SQL代码： CREATE TABLE CUSTOMER( 	CusID char(5) PRIMARY KEY, 	CusName Varchar(10) NOT NULL, 	CusGender char(2) NOT NULL, 	Telephone char(15) NOT NULL, 	Address Varchar(50) NOT NULL ) CREATE TABLE DaySellTable( 	SellID INT PRIMARY KEY, 	OpeID char(4) NOT NULL, 	TotalPrice money NOT NULL, 	SellDate date NOT NULL ) CREATE TABLE BookSellTable( 	BookSellID INT PRIMARY KEY, 	OpeID char(4) NOT NULL, 	BookID char(20) NOT NULL, 	BookName char(50) NOT NULL, 	BookPrice money NOT NULL, 	BookSellDate date NOT NULL ) CREATE TABLE OrderTable ( 	OrderID INT PRIMARY KEY, 	CusID char(5) NOT NULL, 	CusName Varchar(10) NOT NULL, 	BookID char(20) NOT NULL, 	BookName Varchar(50) NOT NULL, 	OrderNumber int NOT NULL, 	OrderMoney money NOT NULL, 	OrderDate date NOT NULL ) 结果截图：  对图书销售管理系统数据库表进行数据增、删、查、改SQL操作  1.插入数据SQL代码： select *from ordertable; insert into ordertable values('01','11','张一一','13','追风筝的人','2','90','2019-05-01'); insert into ordertable values('02','12','黄二二','13','追风筝的人','2','90','2019-05-01'); insert into ordertable values('03','13','吴三三','13','追风筝的人','2','90','2019-05-01'); insert into ordertable values('04','14','孙四四','13','追风筝的人','2','90','2019-05-01'); insert into ordertable values('05','15','何五五','13','追风筝的人','2','90','2019-05-01'); SELECT *FROM dayselltable; insert into dayselltable values('01','22','560','2019-05-1'); insert into dayselltable values('02','22','800','2019-05-2'); insert into dayselltable values('03','23','200','2019-05-3'); insert into dayselltable values('04','23','952','2019-05-4'); SELECT *FROM storage; insert into storage values('1','22','13','30','45','2019-05-2'); insert into storage values('2','22','13','30','45','2019-05-4'); insert into storage values('3','22','02','30','45','2019-05-7'); insert into storage values('4','22','02','30','45','2019-05-8'); insert into storage values('5','23','03','30','45','2019-05-8'); insert into storage values('6','23','03','30','45','2019-05-9'); insert into storage values('7','23','04','30','45','2019-05-10'); insert into storage values('8','23','04','30','45','2019-05-12'); SELECT *FROM customer; insert into customer values('11','张一一','男','18054736677','四川成都'); insert into customer values('12','黄二二','女','18054733677','四川成都'); insert into customer values('13','吴三三','男','18054736657','四川成都'); insert into customer values('14','孙四四','男','18054736677','四川成都'); insert into customer values('15','何五五','女','18054736357','四川成都'); insert into customer values('16','夏六六','男','18054736678','四川成都');  插入数据 运行结果截图：           编写函数Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。  函数SQL语句： CREATE OR REPLACE FUNCTION Pro_CurrentSale(OUT allmoney money) as $count$ BEGIN select sum(ordermoney) into allmoney FROM ordertable WHERE orderdate = '2019-05-01'; END; $count$ LANGUAGE plpgsql;  编写过程语句块，实现对函数Pro_CurrentSale的调用，并输出统计结果。  调用函数：   编写图书销售表Insert触发器Tri_InsertSale，实现图书库存数据同步修改处理。 CREATE OR REPLACE FUNCTION InsertSale() RETURNS TRIGGER AS $$ BEGIN IF (TG_OP = 'INSERT') THEN INSERT INTO storage values(new.bookid,new.bookname,new.price);  update book set book.bookid = book.bookid ; update book set book.bookname = book.bookname ; update book set book.price = book.price ; RETURN NEW; END IF; RETURN NULL; END; $$ LANGUAGE plpgsql; （7）对图书销售表Insert触发器Tri_InsertSale程序进行功能验证。 插入数据 		查看数据    电 子 科 技 大 学 实   验   报   告 学生姓名：黄心茹   学号：2017221005029  指导教师：何中海 一、实验二：图书销售管理系统数据库安全管理 二、实验地点：信软楼西303    实验时间：2019.06.21三、实验目的 了解 DBMS 系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及 PostgreSQL 数据库角色管理、用户管理、权限管理的基本方法，培养数据库管理能力。在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。 四、实验原理 设计数据存取权限控制模型，对各角色进行不同权限的赋予，保证数据库数据的安全性。 使用 SQL 语句进行角色、用户的创建、对角色进行权限赋予、对用户分派角色。 使用不同的用户登录时，就拥有了该用户的权限，在对数据库表进行操作的时候就会受到不同程度的制约。 五、实验内容 使用 pgAdmin4 数据库管理工具对图书销售管理系统数据库进行数据库安全管理，具体实验内容如下: 针对图书销售管理系统数据库，设计数据存取权限控制模型。 在数据库中，创建客户（R_Customer）、商家（R_Seller）角色。 在数据库中，根据业务规则为客户（R_Customer）、商家（R_Seller）角色赋予数据库对象权限。  在数据库中，分别创建客户用户 U_Customer、商家用户 U_Seller。 分别为客户用户 U_Customer、商家用户 U_Seller 分派客户（R_Client）、商家（R_Seller）角色。 分别以客户用户 U_Customer、商家用户 U_Seller 身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。 在实验计算机上，利用pgAdmin4 数据库管理工具及SQL 语句，完成图书销售管理系统数据库安全管理，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。  六、实验设备及环境  “数据库原理及应用”实验所涉及的机房硬件设备为 pc 计算机、服务器以及网络环境，pc 计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS 系统： PostgreSQL 11  七、实验步骤  针对图书销售管理系统，在设计数据存取权限控制模型。 在 pgAdmin4 中的 BookSale 数据库中， 使用 SQL 语句创建客户 （R_Customer）角色、商家（R_Seller）角色。 在 pgAdmin4 中， 根据第一步设计的数据存取权限控制模型对客户 （R_Customer）角色、商家（R_Seller）角色赋予所定义的数据库对象权限。 在 pgAdmin4 中，分别创建客户用户 U_Customer、商家用户 U_Seller，并为客户用户分配客户角色，为商家用户分配商家角色。 分别以客户用户 U_Customer、商家用户 U_Seller 身份访问图书销售管理数据库，并分别以这两个用户对各数据库表进行操作，以验证是否正确分配了两用户不同的角色权限。   八、实验数据及结果分析  针对图书销售管理系统数据库，设计数据存取权限控制模型。 客户角色 商家角色 在数据库中，创建客户（R_Customer）、商家（R_Seller）角色。 CREATE ROLE "R_Customer"	WITH LOGIN NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT NOREPLICATION CONNECTION LIMIT -1  CREATE ROLE "R_Seller"	WITH LOGIN NOSUPERUSER NOCREATEDB NOCREATEROLE NOINHERIT NOREPLICATION CONNECTION LIMIT -1   在数据库中，根据业务规则为客户（R_Customer）、商家（R_Seller）角色赋予数据库对象权限。 GRANT SELECT ON book TO "R_Customer"; GRANT SELECT ON  ordertable TO "R_Customer";   GRANT SELECT,INSERT,UPDATE,DELETE ON book TO "R_Seller";  GRANT SELECT,INSERT,UPDATE,DELETE ON bookselltable TO "R_Seller";  GRANT SELECT,INSERT,UPDATE,DELETE ON customer TO "R_Seller"; GRANT SELECT,INSERT,UPDATE,DELETE ON dayselltable TO "R_Seller";  GRANT SELECT,INSERT,UPDATE,DELETE ON ordertable TO "R_Seller"; GRANT SELECT,INSERT,UPDATE,DELETE ON storage TO "R_Seller";  在数据库中，分别创建客户用户 U_Customer、商家用户 U_Seller。 CREATE USER "U_Customer" WITH LOGIN CONNECTION LIMIT -1 IN ROLE "R_Customer" PASSWORD '123456';  CREATE USER "U_Seller" WITH LOGIN CONNECTION LIMIT -1 IN ROLE "R_Seller" PASSWORD '123456';   分别为客户用户 U_Customer、商家用户 U_Seller 分派客户（R_Client）、商家（R_Seller）角色。 如上 分别以客户用户 U_Customer、商家用户 U_Seller 身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。  用户身份登陆  商家身份登陆  在客户身份下查看Book信息  在客户身份下查看sale信息：无法查看  在商家身份下查看Book信息  在商家身份下查看dayselltable信息  九、总结及心得体会 通过这两次数据库实验，了解 SQL 语言 DDL、DML、DQL 类型语句在数据库操作访问中的应用方法，培养数据库 SQL 编程访问能力。同时也掌握基本的数据库触发器、存储过程 SQL 编程方法，培养数据库后端编程能力。该实验极大地提升了我对数据库原理以及应用的兴趣。