
电 子 科 技 大 学 实   验   报   告  一、实验一：图书销售管理系统数据库SQL应用编程 二、实验室名称：信软楼303					           实验时间：2019.6.14      三、实验目的 针对图书销售管理数据库开发，了解SQL语言DDL、DML、DQL类型语句在数据库操作访问中的应用方法，培养数据库SQL编程访问能力。同时也掌握基本的数据库触发器、存储过程SQL编程方法，培养数据库后端编程能力。本实验完成图书销售管理系统数据库的SQL数据操作访问和后端数据处理功能。 四、实验原理 第一章 数据库系统分析与设计建模 1.1 概念数据模型概述 针对数据库系统开发，一个很重要的工作就是建立该系统的数据模型。所谓数据模型是指现实世界中数据对象特征、数据对象关系及其约束的描述形式。数据模型一般由数据结构、数据操作、数据约束三部分组成。数据库应用开发需要建模的数据模型有三个层次： 1）概念数据模型――面向用户的业务数据对象及其联系 2）逻辑数据模型――面向设计者的系统数据对象逻辑表示及其联系 3）物理数据模型――面向开发者的系统数据对象存储结构形式 概念数据模型（CDM，Concept Data Model）也称信息模型。该模型主要以实体－联系(Entity-RelationShip,简称E-R)理论为基础，采用E-R模型图来描述应用系统的数据对象和数据关系，主要用于数据库系统分析建模。 CDM有一组严格定义的模型元素集合，这些模型元素精确地描述了系统的静态特性、动态特性以及完整性约束条件等，其中包括了数据结构、数据操作和完整性约束三部分。 1）数据结构表达为实体和属性; 2）数据操作表达为实体中的记录的插入、删除、修改、查询等操作; 3）完整性约束表达为数据的自身完整性约束（如数据类型、检查、规则等）和数据间的参照完整性约束（如联系、继承联系等）。 1.2 实体、属性及标识符的定义 实体（Entity），也称为实例，对应现实世界中可区别于其他对象的“事件”或“事物”。例如，学校中的每个学生，医院中的每个手术。 每个实体都有用来描述实体特征的一组性质，称之为属性，一个实体由若干个属性来描述。如学生实体可由学号、姓名、性别、出生年月、所在系别、入学年份等属性组成。 实体集（EntitySet）是具体相同类型及相同性质实体的集合。例如学校所有学生的集合可定义为“学生”实体集，“学生”实体集中的每个实体均具有学号、姓名、性别、出生年月、所在系别、入学年份等性质。 实体类型（EntityType）是实体集中每个实体所具有的共同性质的集合，例如“患者”实体类型为：患者｛门诊号，姓名，性别，年龄，身份证号.............｝。实体是实体类型的一个实例，在含义明确的情况下，实体、实体类型通常互换使用。 实体类型中的每个实体包含唯一标识它的一个或一组属性，这些属性称为实体类型的标识符（Identifier），如“学号”是学生实体类型的标识符，“姓名”、“出生日期”、“信址”共同组成“公民”实体类型的标识符。 有些实体类型可以有几组属性充当标识符，选定其中一组属性作为实体类型的主标识符，其他的作为次标识符。 第二章 PostgreSQL 数据库 PostgreSQL是以加州大学伯克利分校计算机系开发的开源的、免费的对象关系型数据库管理系统（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、外键、触发器、视图、事务完整性、MVCC。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、聚集函数、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。它提供了相对其他开放源代码数据库系统(比如 MySQL 和 Firebird)，和专有系统(比如 Oracle、Sybase、IBM 的 DB2 和 Microsoft SQL Server)之外的另一种选择。事实上， PostgreSQL 的特性覆盖了 SQL-2/SQL-92 和 SQL-3/SQL-99，首先，它包括了可以说是目前世界上最丰富的数据类型的支持，其中有些数据类型可以说连商业数据库都不具备， 比如 IP 类型和几何类型等；其次，PostgreSQL 是全功能的自由软件数据库，很长时间以来，PostgreSQL 是唯一支持事务、子查询、多版本并行控制系统（MVCC）、数据完整性检查等特性的唯一的一种自由软件的数据库管理系统。  从技术角度来讲，PostgreSQL 采用的是比较经典的C/S（client/server）结构，也就是一个客户端对应一个服务器端守护进程的模式，这个守护进程分析客户端来的查询请求，生成规划树，进行数据检索并最终把结果格式化输出后返回给客户端。为了便于客户端的程序的编写，由数据库服务器提供了统一的客户端 C 接口。而不同的客户端接口都是源自这个 C 接口，比如ODBC，JDBC，Python，Perl，Tcl，C/C++，ESQL等， 同时也要指出的是，PostgreSQL 对接口的支持也是非常丰富的，几乎支持所有类型的数据库客户端接口。这一点也可以说是 PostgreSQL 一大优点。PostgreSQL强壮的一个原因源于它的架构。和商业数据库一样，PostgreSQL可以用于C/S(客户/服务器)环境。这对于用户和开发人员有很多好处。PostgreSQL安装核心是数据库服务端进程。它允许在一个独立服务器上。需要访问存储在数据库中的数据的应用程序必须通过数据库进程。这些客户端程序无法直接访问数据，即使它们和服务程序在同一台机器上。 2.1 PostgreSQL数据库简介 PostgreSQL 是一个自由的对象-关系数据库服务器（数据库管理系统），功能很强大。包括了可以说是目前世界上最丰富的数据类型的支持，比如 IP 类型和几何类型等等。PostgreSQL 真正诞生于二十世纪八十年代，它沿用了 ingres 很多的思想,  1995 年正式社区化了, PostgreSQL 从此诞生了。经过近 20 多年的持续开发和经验证的体系结构，PostgreSQL 在数据库领域已经赢得了良好的声誉。 PostgreSQL的源代码可以自由获取，它的授权是在非常自由的开源授权下，这种授权允许用户在各种开源或是闭源项目中使用、修改和发布PostgreSQL的源代码。用户对源代码的可以按用户意愿进行任何修改、改进。因此，PostgreSQL不仅是一个强大的企业级数据库系统，也是一个用户可以开发私用、网络和商业软件产品的数据库开发平台。 PostgreSQL是一种几乎可以运行在各种平台上的免费的开放源码的对象关系数据库管理系统，拥有与企业级数据库相媲美的特性，如完善的SQL标准支持、多版本并发控制、时间点恢复、表空间机制、异步复制、嵌套事务、在线/热备份、一个复杂的查询优化器、预写日志容错技术。它支持国际字符集、多字节字符编码、Unicode，并且对格式化、排序、大小写敏感提供本地化支持。PostgreSQL在管理大数据量方面有良好的可扩展性，对并发用户管理具有自适应性。现在已经出现具有管理超过4万亿字节数据能力的实用版本产品。 开放特性：PostgreSQL内置了丰富的数据类型，如任意精度的数值、无限制长度的文本、几何图元、IP地址、数组等；同时还允许用户定义基于正规SQL类型的新类型，让数据库自身理解复杂数据，自定义类型中还可以包含继承关系。用户可以为数据库内几乎所有的对象定义新的类型，如索引、操作符（可重载现有操作符）、聚集函数、数据域、数据类型转换、会话（编码转换）等。 可编程性：PostgreSQL同样拥有大量的编程接口供用户开发使用，如ODBC、JDBC（Java）、Libpq（C/C++）等。 可定制性：PostgreSQL拥有广泛的编程语言支持来实现函数功能，包括内置的PL/pgSQL过程语言，PL/Perl、plPHP、PL/Python、PL/Ruby、PL/Tcl等脚本语言，以及Java、C/C++等高级编程语言。函数的输出是一系列行类型的集合，可以在查询中当做表来使用，函数也可以被定义成以创建者或者调用者的身份运行。在其他的数据库产品中，函数也会被称为“存储过程”。 索引手段：用户可以自定义索引方法或者使用内置B-Tree索引、Hash表索引、GiST索引、GIN索引。GiST索引不是某种特定的索引类型，而是一种通用索引基础结构，可以在这种结构上实现很多不同的索引策略。PostgreSQL同时还支持如下功能：反向索引检索、表达式索引、部分索引、位图索引扫描。 多种身份认证方式：PostgreSQL中可以使用数据库用户/角色、操作系统、PAM、Kerberos等方式，根据主机配置文件（pg_hba.conf）中的设置执行对应的身份认证。 2.2 PostgreSQL 系统的基本体系结构 PostgreSQL 使用客户机/服务器（C/S）的模式提供服务，一个PostgreSQL会话由下列相关的进程（程序）组成： (1)一个服务器端进程。该进程管理数据库文件，接受客户端与数据库的连接，且代表客户端对数据库进行操作。该进程的程序名叫做 postgres。 (2)前端应用，即需要进行数据库操作的客户端应用。客户端应用可能本身就是多种多样的：它们可以是一个字符界  面的工具， 也可以是一个图形界面的应用，或者是一个通过访问数据库来显示网页的 web 服务器，或者是一个特殊的数据库管理工具。 一些客户端应用是和 PostgreSQL 发布一起提供的，但绝大部分是用户开发的。 和典型的客户端/服务器应用（C/S应用）一样，客户端和服务器可以在不同的主机上。此时，它们通过TCP/IP进行网络连接，你应该记住这一点，因为在客户机上可以访问的文件未必能够在数据库服务器机器上访问（或者只能用不同的文件名进行访问）。 PostgreSQL 服务器可以处理来自客户端的多个并发请求。为了能这样处理，它会为每个请求启动（“forks”）一个新的进程，然后，客户端和新服务器端进程就不再经过最初的postgres 进程而直接通信。 因此， 服务器端的主进程一直运行，等待着来自客户端的连接；而客户端和相关联的服务器端进程则在需要的时候才会运行。PostgreSQL数据库是一种极好可以运行在各种平台上的免费的开放源码的对象关系数据库，它是一种以关系数据库和SQL为基础，扩展了抽象数据类型，从而具备面向对象特性的数据库。 PostgreSQL由连接管理系统（系统控制器），编译执行系统，存储管理系统，事务系统，系统表五大部分组成。 连接管理系统接受外部操作对系统的请求，对操作请求进行预处理和分发，起系统逻辑控制作用；编译执行系统由查询编译器，查询执行器组成，完成操作请求在数据库中的分析处理和转化工作，最终实现物理存储介质中数据的操作；存储管理系统由索引管理器，内存管理器，外存管理器组成，负责存储和管理物理数据，提供对编译查询系统的支持；事务系统由事务管理器，日志管理器，并发控制，锁管理器组成，日志管理器和事务管理器完成对操作请求的事务一致性支持，锁管理器和并发控制提供对并发访问数据的一致性支持；系统表是PostgreSQL数据库的元信息管理中心，包括数据库对象信息和数据库管理控制信息。系统表管理元数据信息，将PostgreSQL数据库的各个模块有机地连接在一起，形成一个高效的数据管理系统。  图2-1 PostgreSQL体系结构图（组成结构和关系）  系统表： 在关系数据库中，为了实现数据库系统的控制，必须提供数据字典的功能。数据字典不仅存储各种对象的描述信息，而且存储系统管理所需的各种对象的细节信息。数据字典包含数据库系统中所有对象及其属性的描述信息，对象之间关系的描述信息，对象属性的自然语言含义以及数据字典变化的历史，数据字典是关系数据库系统管理控制信息的核心，在PostgreSQL数据库系统中系统表扮演着数据字典的角色。系统表是PostgreSQL数据库存放结构元数据的地方，他在PostgreSQL中表现为存放有系统信息的普通表或者视图（用户可以删除，重建）。系统表保存了数据库的所有元数据，所以系统运行时对系统表的访问是非常频繁的。为了提高系统性能，在内存中建立了共享的系统表，使用Hash表提高查询效率。 2.3 pgadmin4  pgadmin4是一款可以让您编辑SQL的软件，您可以在软件上找到编辑器，并从本地添加需要修改的文件，从而完成数据库基本信息管理以及文本修改，本软件是国外设计的，发行到中国以后官方已经添加了中文简体版本，用户只需要在设置界面上找到杂项中的语言设置窗口，就可以转换到中文界面；PostgreSQL数据库管理工具同时提供了十二种管理工具，支持维护、备份、SQL查询、演示WAL、添加新的数据还原点等，功能非常强大！ 软件功能包括广泛的文档、pgAdmin应用程序文档、PostgreSQL文档链接；多个部署模型、桌面模式，使用专门构建的运行时、服务器模式，通过网络支持多个用户；颜色语法高亮查询工具、用于显示/输入数据的快速数据网格、图形查询计划显示、授予向导以快速更新ACL、程序语言调试器（支持pl / pgsql和edb-spl）；自动真空管理、监视仪表板、备份，恢复，真空和需求分析、SQL / shell /批处理作业调度代理、创建，查看和编辑所有常见的PostgreSQL对象。 软件特色： pgAdmin4具有自己专属的SQL编辑器；可以在软件上直接查询SQL的信息；在连接到数据库以后可以自动分析需要的数据；在查询的时候会通知用户具体的SQL内容；可以显示查询内容时间长度；可以显示指定秒数通知程序；支持缓冲区的信息提示在桌面上；支持详细的pgAdmin4数据报告；支持查询SQL的代价信息标注。  pgAdmin导航菜单功能:  1).文件菜单:在文件菜单中当点击服务器根节点下某个节点时可以更改连接密码。 2).编辑菜单: 点击编辑菜单可以对数据库和对象做相应的操作。(右键所选对象相当于编辑中所有相关功能) 3).插件: 启动psql控制台并连接到在pgAdmin中所选的数据库。可以输入相应的命令。 4).视图: 用来调节页面视图的显示。例如：打开与关闭SQL窗口。 5.工具: 在主窗体左面的对象树中点击不同的节点　工具中菜单的高亮显示可做相应的操作。(所选对象右键操作可达到相同效果但工具中可以打开查询工具)。 6).帮助: 可以查看帮助文档 五、实验内容 使用pgAdmin4数据库管理工具对图书销售管理系统数据库进行SQL编程操作，并完成触发器、存储过程后端编程，具体实验内容如下: 图书借阅管理系统数据库方案创建及配置。 图书借阅管理系统数据库方案中创建数据库对象（表、视图、索引、序列等）的SQL操作。 图书借阅管理系统数据库表的数据增、删、查、改SQL操作。 图书借阅管理系统数据库的触发器编程，以实现业务规则数据处理。 图书借阅管理系统数据库的存储过程编程，以实现数据库后端数据处理。 在实验计算机上，利用pgAdmin4数据库管理工具及SQL语句，完成图书销售管理系统数据库SQL应用编程操作，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。 六、实验设备及环境 “数据库原理及应用”实验所涉及的机房硬件设备为pc计算机、服务器以及网络环境，pc计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS系统： PostgreSQL 11 七、实验步骤 使用pgAdmin数据库系统工具开展图书借阅管理系统数据库操作访问，其步骤如下：   1）使用pgAdmin4创建一个小型图书馆数据库library。 2）在library数据库中，通过执行SQL语句创建图书借阅管理系统数据库的表、视图、索引、序列等对象。 3）图书借阅管理系统数据库表中，通过执行SQL语句实现数据增、删、查、改SQL操作。 4）在library数据库中，通过执行SQL语句实现图书借阅管理系统数据库的触发器，以实现业务规则（如依据图书借阅数据对图书库存数据进行同步修改）数据处理。 5）在library数据库中，通过执行SQL语句实现图书借阅管理系统数据库的存储过程，以实现数据库后端数据（如图书借阅统计）处理。 八、实验数据及结果分析 1.图书管理系统数据库Library创建操作  在Windows操作系统中，启动pgAdmin4工具运行。并使用pgAdmin4创建登录/组角色Library_Manager      创建数据库    2. 在图书销售管理系统数据库Library中创建数据库表、视图、索引等对象  创建表：          代码如下    插入数据操作    创建表reader的视图        代码：  查看视图及结果：   插入book数据   数据修改操作        数据查询 假定需要查找数据库实验图书，可编写如下查询SQL语句： SELECT * FROM "BOOK" WHERE BOOK_NAME LIKE '数据库实验%';   4.创建触发器 在Library中，通过创建数据库触发器实现特定业务规则，如依据借阅图书数量自动对该图书的库存数量进行处理。为此,需要在图书表BOOK上创建一个Insert触发器，在该触发器程序中完成对BOOK表中BOOK_STORE数据修改处理。实现该功能的触发器函数的SQL程序如下：    创建触发器BORROW_BOOK    为了验证该触发器是否能正确工作，可进行如下测试： 1）查询图书（图书编号为“P00006”）的当前库存  2）假定现在有同学借阅图书编号为“P00006”图书，其SQL语句执行结果 ・3）重新查询图书（图书编号为“P00006”）的当前库存  重新查询图书（编号为“P00006”）的当前库存为17，比销售前少了5本，即表明触发器程序已经正确执行。  5.存储过程创建 在Library中，通过执行SQL语句实现图书借阅管理系统数据库的存储过程，以实现数据库后端数据（如图书借阅总数目统计）处理。例如，实现一个过程程序统计图书借阅数量统计，该过程程序有一个输入参数：日期，输出结果为该日期销售图书的总销售量。             九、总结及心得体会 通过本次实验，更加深刻学习了如何创建数据库、如何建立视图、索引，更加了解了数据库SQL语言中函数语句如何创建，触发器如何创建以及去检查触发器是否创建成功运行，存储过程的创建。总的来说本次实验还是让我学到了很多东西，最重要的是巩固了上课所学到的知识，把上课所学付诸实践，真正写了代码才有所收获。 
 电 子 科 技 大 学 实   验   报   告  一、实验二：图书销售管理系统数据库安全管理 二、实验室名称：信软楼303  					     实验时间：2019.6.21    三、实验目的 了解该DBMS系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及PostgreSQL数据库角色管理、用户管理、权限管理的基本方法，培养数据库管理能力。在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。 四、实验原理 第一章 数据库系统分析与设计建模 1.1 概念数据模型概述 针对数据库系统开发，一个很重要的工作就是建立该系统的数据模型。所谓数据模型是指现实世界中数据对象特征、数据对象关系及其约束的描述形式。数据模型一般由数据结构、数据操作、数据约束三部分组成。数据库应用开发需要建模的数据模型有三个层次： 1）概念数据模型――面向用户的业务数据对象及其联系 2）逻辑数据模型――面向设计者的系统数据对象逻辑表示及其联系 3）物理数据模型――面向开发者的系统数据对象存储结构形式 概念数据模型（CDM，Concept Data Model）也称信息模型。该模型主要以实体－联系(Entity-RelationShip,简称E-R)理论为基础，采用E-R模型图来描述应用系统的数据对象和数据关系，主要用于数据库系统分析建模。 CDM有一组严格定义的模型元素集合，这些模型元素精确地描述了系统的静态特性、动态特性以及完整性约束条件等，其中包括了数据结构、数据操作和完整性约束三部分。 1）数据结构表达为实体和属性; 2）数据操作表达为实体中的记录的插入、删除、修改、查询等操作; 3）完整性约束表达为数据的自身完整性约束（如数据类型、检查、规则等）和数据间的参照完整性约束（如联系、继承联系等）。 1.2 实体、属性及标识符的定义 实体（Entity），也称为实例，对应现实世界中可区别于其他对象的“事件”或“事物”。例如，学校中的每个学生，医院中的每个手术。 每个实体都有用来描述实体特征的一组性质，称之为属性，一个实体由若干个属性来描述。如学生实体可由学号、姓名、性别、出生年月、所在系别、入学年份等属性组成。 实体集（EntitySet）是具体相同类型及相同性质实体的集合。例如学校所有学生的集合可定义为“学生”实体集，“学生”实体集中的每个实体均具有学号、姓名、性别、出生年月、所在系别、入学年份等性质。 实体类型（EntityType）是实体集中每个实体所具有的共同性质的集合，例如“患者”实体类型为：患者｛门诊号，姓名，性别，年龄，身份证号.............｝。实体是实体类型的一个实例，在含义明确的情况下，实体、实体类型通常互换使用。 实体类型中的每个实体包含唯一标识它的一个或一组属性，这些属性称为实体类型的标识符（Identifier），如“学号”是学生实体类型的标识符，“姓名”、“出生日期”、“信址”共同组成“公民”实体类型的标识符。 有些实体类型可以有几组属性充当标识符，选定其中一组属性作为实体类型的主标识符，其他的作为次标识符。 第二章 PostgreSQL 数据库 PostgreSQL是以加州大学伯克利分校计算机系开发的开源的、免费的对象关系型数据库管理系统（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、外键、触发器、视图、事务完整性、MVCC。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、聚集函数、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。它提供了相对其他开放源代码数据库系统(比如 MySQL 和 Firebird)，和专有系统(比如 Oracle、Sybase、IBM 的 DB2 和 Microsoft SQL Server)之外的另一种选择。事实上， PostgreSQL 的特性覆盖了 SQL-2/SQL-92 和 SQL-3/SQL-99，首先，它包括了可以说是目前世界上最丰富的数据类型的支持，其中有些数据类型可以说连商业数据库都不具备， 比如 IP 类型和几何类型等；其次，PostgreSQL 是全功能的自由软件数据库，很长时间以来，PostgreSQL 是唯一支持事务、子查询、多版本并行控制系统（MVCC）、数据完整性检查等特性的唯一的一种自由软件的数据库管理系统。  从技术角度来讲，PostgreSQL 采用的是比较经典的C/S（client/server）结构，也就是一个客户端对应一个服务器端守护进程的模式，这个守护进程分析客户端来的查询请求，生成规划树，进行数据检索并最终把结果格式化输出后返回给客户端。为了便于客户端的程序的编写，由数据库服务器提供了统一的客户端 C 接口。而不同的客户端接口都是源自这个 C 接口，比如ODBC，JDBC，Python，Perl，Tcl，C/C++，ESQL等， 同时也要指出的是，PostgreSQL 对接口的支持也是非常丰富的，几乎支持所有类型的数据库客户端接口。这一点也可以说是 PostgreSQL 一大优点。PostgreSQL强壮的一个原因源于它的架构。和商业数据库一样，PostgreSQL可以用于C/S(客户/服务器)环境。这对于用户和开发人员有很多好处。PostgreSQL安装核心是数据库服务端进程。它允许在一个独立服务器上。需要访问存储在数据库中的数据的应用程序必须通过数据库进程。这些客户端程序无法直接访问数据，即使它们和服务程序在同一台机器上。 2.1 PostgreSQL数据库简介 PostgreSQL 是一个自由的对象-关系数据库服务器（数据库管理系统），功能很强大。包括了可以说是目前世界上最丰富的数据类型的支持，比如 IP 类型和几何类型等等。PostgreSQL 真正诞生于二十世纪八十年代，它沿用了 ingres 很多的思想,  1995 年正式社区化了, PostgreSQL 从此诞生了。经过近 20 多年的持续开发和经验证的体系结构，PostgreSQL 在数据库领域已经赢得了良好的声誉。 PostgreSQL的源代码可以自由获取，它的授权是在非常自由的开源授权下，这种授权允许用户在各种开源或是闭源项目中使用、修改和发布PostgreSQL的源代码。用户对源代码的可以按用户意愿进行任何修改、改进。因此，PostgreSQL不仅是一个强大的企业级数据库系统，也是一个用户可以开发私用、网络和商业软件产品的数据库开发平台。 PostgreSQL是一种几乎可以运行在各种平台上的免费的开放源码的对象关系数据库管理系统，拥有与企业级数据库相媲美的特性，如完善的SQL标准支持、多版本并发控制、时间点恢复、表空间机制、异步复制、嵌套事务、在线/热备份、一个复杂的查询优化器、预写日志容错技术。它支持国际字符集、多字节字符编码、Unicode，并且对格式化、排序、大小写敏感提供本地化支持。PostgreSQL在管理大数据量方面有良好的可扩展性，对并发用户管理具有自适应性。现在已经出现具有管理超过4万亿字节数据能力的实用版本产品。 开放特性：PostgreSQL内置了丰富的数据类型，如任意精度的数值、无限制长度的文本、几何图元、IP地址、数组等；同时还允许用户定义基于正规SQL类型的新类型，让数据库自身理解复杂数据，自定义类型中还可以包含继承关系。用户可以为数据库内几乎所有的对象定义新的类型，如索引、操作符（可重载现有操作符）、聚集函数、数据域、数据类型转换、会话（编码转换）等。 可编程性：PostgreSQL同样拥有大量的编程接口供用户开发使用，如ODBC、JDBC（Java）、Libpq（C/C++）等。 可定制性：PostgreSQL拥有广泛的编程语言支持来实现函数功能，包括内置的PL/pgSQL过程语言，PL/Perl、plPHP、PL/Python、PL/Ruby、PL/Tcl等脚本语言，以及Java、C/C++等高级编程语言。函数的输出是一系列行类型的集合，可以在查询中当做表来使用，函数也可以被定义成以创建者或者调用者的身份运行。在其他的数据库产品中，函数也会被称为“存储过程”。 索引手段：用户可以自定义索引方法或者使用内置B-Tree索引、Hash表索引、GiST索引、GIN索引。GiST索引不是某种特定的索引类型，而是一种通用索引基础结构，可以在这种结构上实现很多不同的索引策略。PostgreSQL同时还支持如下功能：反向索引检索、表达式索引、部分索引、位图索引扫描。 多种身份认证方式：PostgreSQL中可以使用数据库用户/角色、操作系统、PAM、Kerberos等方式，根据主机配置文件（pg_hba.conf）中的设置执行对应的身份认证。 2.2 PostgreSQL 系统的基本体系结构 PostgreSQL 使用客户机/服务器（C/S）的模式提供服务，一个PostgreSQL会话由下列相关的进程（程序）组成： (1)一个服务器端进程。该进程管理数据库文件，接受客户端与数据库的连接，且代表客户端对数据库进行操作。该进程的程序名叫做 postgres。 (2)前端应用，即需要进行数据库操作的客户端应用。客户端应用可能本身就是多种多样的：它们可以是一个字符界  面的工具， 也可以是一个图形界面的应用，或者是一个通过访问数据库来显示网页的 web 服务器，或者是一个特殊的数据库管理工具。 一些客户端应用是和 PostgreSQL 发布一起提供的，但绝大部分是用户开发的。 和典型的客户端/服务器应用（C/S应用）一样，客户端和服务器可以在不同的主机上。此时，它们通过TCP/IP进行网络连接，你应该记住这一点，因为在客户机上可以访问的文件未必能够在数据库服务器机器上访问（或者只能用不同的文件名进行访问）。 PostgreSQL 服务器可以处理来自客户端的多个并发请求。为了能这样处理，它会为每个请求启动（“forks”）一个新的进程，然后，客户端和新服务器端进程就不再经过最初的postgres 进程而直接通信。 因此， 服务器端的主进程一直运行，等待着来自客户端的连接；而客户端和相关联的服务器端进程则在需要的时候才会运行。PostgreSQL数据库是一种极好可以运行在各种平台上的免费的开放源码的对象关系数据库，它是一种以关系数据库和SQL为基础，扩展了抽象数据类型，从而具备面向对象特性的数据库。 PostgreSQL由连接管理系统（系统控制器），编译执行系统，存储管理系统，事务系统，系统表五大部分组成。 连接管理系统接受外部操作对系统的请求，对操作请求进行预处理和分发，起系统逻辑控制作用；编译执行系统由查询编译器，查询执行器组成，完成操作请求在数据库中的分析处理和转化工作，最终实现物理存储介质中数据的操作；存储管理系统由索引管理器，内存管理器，外存管理器组成，负责存储和管理物理数据，提供对编译查询系统的支持；事务系统由事务管理器，日志管理器，并发控制，锁管理器组成，日志管理器和事务管理器完成对操作请求的事务一致性支持，锁管理器和并发控制提供对并发访问数据的一致性支持；系统表是PostgreSQL数据库的元信息管理中心，包括数据库对象信息和数据库管理控制信息。系统表管理元数据信息，将PostgreSQL数据库的各个模块有机地连接在一起，形成一个高效的数据管理系统。  图2-1 PostgreSQL体系结构图（组成结构和关系）  系统表： 在关系数据库中，为了实现数据库系统的控制，必须提供数据字典的功能。数据字典不仅存储各种对象的描述信息，而且存储系统管理所需的各种对象的细节信息。数据字典包含数据库系统中所有对象及其属性的描述信息，对象之间关系的描述信息，对象属性的自然语言含义以及数据字典变化的历史，数据字典是关系数据库系统管理控制信息的核心，在PostgreSQL数据库系统中系统表扮演着数据字典的角色。系统表是PostgreSQL数据库存放结构元数据的地方，他在PostgreSQL中表现为存放有系统信息的普通表或者视图（用户可以删除，重建）。系统表保存了数据库的所有元数据，所以系统运行时对系统表的访问是非常频繁的。为了提高系统性能，在内存中建立了共享的系统表，使用Hash表提高查询效率。 2.3 pgadmin4  pgadmin4是一款可以让您编辑SQL的软件，您可以在软件上找到编辑器，并从本地添加需要修改的文件，从而完成数据库基本信息管理以及文本修改，本软件是国外设计的，发行到中国以后官方已经添加了中文简体版本，用户只需要在设置界面上找到杂项中的语言设置窗口，就可以转换到中文界面；PostgreSQL数据库管理工具同时提供了十二种管理工具，支持维护、备份、SQL查询、演示WAL、添加新的数据还原点等，功能非常强大！ 软件功能包括广泛的文档、pgAdmin应用程序文档、PostgreSQL文档链接；多个部署模型、桌面模式，使用专门构建的运行时、服务器模式，通过网络支持多个用户；颜色语法高亮查询工具、用于显示/输入数据的快速数据网格、图形查询计划显示、授予向导以快速更新ACL、程序语言调试器（支持pl / pgsql和edb-spl）；自动真空管理、监视仪表板、备份，恢复，真空和需求分析、SQL / shell /批处理作业调度代理、创建，查看和编辑所有常见的PostgreSQL对象。 软件特色： pgAdmin4具有自己专属的SQL编辑器；可以在软件上直接查询SQL的信息；在连接到数据库以后可以自动分析需要的数据；在查询的时候会通知用户具体的SQL内容；可以显示查询内容时间长度；可以显示指定秒数通知程序；支持缓冲区的信息提示在桌面上；支持详细的pgAdmin4数据报告；支持查询SQL的代价信息标注。  pgAdmin导航菜单功能:  1).文件菜单:在文件菜单中当点击服务器根节点下某个节点时可以更改连接密码。 2).编辑菜单: 点击编辑菜单可以对数据库和对象做相应的操作。(右键所选对象相当于编辑中所有相关功能) 3).插件: 启动psql控制台并连接到在pgAdmin中所选的数据库。可以输入相应的命令。 4).视图: 用来调节页面视图的显示。例如：打开与关闭SQL窗口。 5.工具: 在主窗体左面的对象树中点击不同的节点　工具中菜单的高亮显示可做相应的操作。(所选对象右键操作可达到相同效果但工具中可以打开查询工具)。 6).帮助: 可以查看帮助文档 五、实验内容 使用pgAdmin4数据库开发工具对图书借阅管理系统数据库进行数据库管理，并完成数据库备份/恢复处理，具体实验内容如下: 图书借阅管理系统数据库拥有者用户（Library_Manager）创建 图书借阅管理系统数据库角色创建 图书借阅管理系统模式（Schema）创建 图书借阅管理系统数据库角色权限设置 图书借阅管理系统数据库其他用户创建与角色分派 图书借阅管理系统用户的数据库对象访问 在实验计算机上，利用pgAdmin4数据库系统工具，完成图书借阅管理系统数据库管理与维护，同时记录实验过程的规划、操作、运行结果界面等数据，为撰写实验报告提供素材。 六、实验设备及环境 “数据库原理及应用”实验所涉及的机房硬件设备为pc计算机、服务器以及网络环境，pc计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS系统： PostgreSQL 11 七、实验步骤 使用pgAdmin4数据库系统工具开展图书借阅管理系统数据库管理与维护，其步骤如下：   1）创建数据库拥有者用户Library_Manager 2）创建Library数据库 3）创建图书借阅管理系统数据库客户、经理角色 4）分派创建角色的权限 5）创建图书借阅管理系统用户 6）分派创建用户的角色 7）验证创建用户的数据库对象访问权限 8）数据库备份管理 9）数据库恢复管理 八、实验数据及结果分析 创建数据库拥有者用户Library_Manager，其角色为superuser.（与实验一同） 在Windows操作系统中，启动pgAdmin4工具运行。并使用pgAdmin4创建登录/组角色Library_Manager 创建数据库Library 使用pgAdmin4工具创建数据库Library，Owner为Library_Manager 创建图书借阅管理系统数据库客户、经理角色 在实际应用中，可以由DBA按业务需要创建用户自定义角色。在系统的用户管理中，通常会把多个用户赋予一个组，这样在设置权限时只需给该组设置即可，撤销权限时也是从该组撤消。在PostgreSQL中，首先需要创建一个代表组的角色，之后再将该角色的membership权限赋给独立的用户角色即可，按实验要求，我们需要两个组角色，分别为数据库经理Manager和客户Reader， 分派创建角色的权限     数据库对象在被创建时都会被赋予一个所有者，通常而言，所有者就是执行对象创建语句的角色。对于大多数类型的对象，其初始状态是只有所有者(或超级用户)可以对该对象做任何事情。如果要允许其它用户可以使用该对象，必须赋予适当的权限。  在本实验中，经理(Manager)角色对数据库方案中所有表拥有Insert、Delete、Update、Select操作权限，而客户（Reader）角色对数据库方案中部分数据表（如BOOK、READER）具有Insert、Delete、Update、Select操作权限。   其次为客户Reader赋予BOOK和READER的相应权限   为新建用户授予自定义角色 在此前，分别创建了系统自定义角色manager和reader。现可以将这些自定义角色授予新用户。 本实验将创建一个新用户“user1”，并给他赋予“reader”角色。在“登录/组角色”右键，点击“创建”再点击“登录/组角色”    选中组角色reader，点击右键，选中“属性”选项。在出现的界面中点击“成员”，并选择user1成员，点击保存     查询user1用户的数据库访问权限 首先查询reader角色的权限          PostgreSQL中，Inherit表示组角色reader的任何一个成员角色都将自动继承除“超级用户权限”外的所有权限   九、总结及心得体会 通过本次实验，熟悉了典型的数据库管理工具使用，掌握了应用系统的数据库管理技术与方法，如数据库角色管理、用户管理、权限管理、数据库备份与恢复等系统管理操作，以及完成数据库对象操作访问。这些虽然在课堂中都有所学到，但是没有实际操作过。本次实验给我们了一次实际操作的机会，巩固了所学知识。 