电子科技大学信息与软件工程学院    实 验 报 告    学    号    2017221303012      姓    名        杨映雷         （实验）	课程名称  数据库原理及应用     理论教师        文军           实验教师        何中海              电子科技大学教务处制表    电 子 科 技 大 学 实   验   报   告 学生姓名：杨映雷	学号：2017221303012   指导教师：何中海 实验地点：信软学院楼西303  实验时间：2019.01.12 一、实验一：图书销售管理系统数据库SQL应用编程 二、实验学时：4 三、实验目的： 针对图书销售管理数据库开发，了解SQL语言DDL、DML、DQL类型语句在数据库操作访问中的应用方法，培养数据库SQL编程访问能力。同时也掌握基本的数据库触发器、存储过程SQL编程方法，培养数据库后端编程能力。本实验完成图书销售管理系统数据库的SQL数据操作访问和后端数据处理功能。  四、实验原理： 	1.首先对图书销售管理系统进行需求分析，定义实体、实体属性和实体之间的关系。通过建模设计工具，进一步对图书销售管理数据库进行物理模型设计。 	2.基于数据库设计方案，通过SQL编程执行完成对数据库的操作，使用SQL语句完成对数据库、关系表、索引、视图、触发器、存储过程的创建，最后利用视图、存储过程、触发器实现业务数据处理。  五、实验内容： 使用pgAdmin4数据库管理工具对图书销售管理系统数据库进行SQL编程操作，并完成触发器、存储过程后端编程，具体实验内容如下: 1.在数据库服务器中，执行SQL创建图书销售管理系统数据库BookSale。 2.在数据库BookSale中，执行SQL创建数据库表、视图、索引等对象。 3.在数据库BookSale中，执行SQL进行数据增、删、查、改访问操作。 4.在数据库BookSale中，采用PL/pgSQL语言编写存储过程函数Pro_CurrentSale，实现当日图书销售量及销售金额汇总统计。 5.在数据库BookSale中，采用PL/pgSQL语言编写过程语句块，实现对存储过程函数Pro_CurrentSale的调用，并输出统计结果。 6.在数据库BookSale中，采用PL/pgSQL语言编写编写图书销售表Insert触发器Tri_InsertSale，实现图书库存数据同步修改处理。 7.在数据库BookSale中，对图书销售表Insert触发器Tri_InsertSale程序进行功能验证。 8.在数据库BookSale中，创建存储过程函数实现图书销售数量和金额统计。 在实验计算机上，利用pgAdmin4数据库管理工具及SQL、PL/pgSQL语言，完成图书销售管理系统数据库应用编程操作，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。  六、实验器材（设备、元器件）： “数据库原理及应用”实验所涉及的机房硬件设备为pc计算机、服务器以及网络环境，pc计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS系统： PostgreSQL 11  七、实验步骤： 1.在数据库服务器中，创建数据库BookSale_2017221303012. 2.在数据库中采用SQL语句创建图书表、作者表、出版社表、库存流水表、客户表、销售表、以及各表主键外间的创建，并创建索引。 3.为各个准备数据数据并进行插入操作。 4.创建视图BOOK_AUTHER_PUBLISHER，该视图查询数据库，输出图书名、作者、出版社以及图书价格等数据。 5.编写触发器函数，实现在sale_005表插入时，级联操作stock_005表。 6.创建完触发器函数之后，创建对应的触发器。 7.测试触发器功能。 8.编写存储过程函数，实现统计某日图书的销售总量以及总金额数据。 9.调用存储过程函数，查看输出结果是否准确实现业务数据处理功能。 八、实验结果与分析（含重要数据结果分析或核心代码流程分析） 1.创建BookSale_2017221303001数据库： SQL语句：create database "BookSale_2017221303012"        2.创建各数据库表以及表中主外键和索引： 首先明确实体及其之间的关系，然后进行创建。 SQL语句： 运行结果   3.插入数据并对publisher005进行增删改查操作： SQL语句如下： 运行结果       使用select *from publisher005; 结果如下：   4.创建视图： SQL语句如下：     使用select * from BOOK_AUTHER_PUBLISHER005;查询结果如下：  5.创建触发器函数： 创建触发器函数实现有一条销售数据插入sale005时，同时在stock005中修改图书的库存。 SQL语句：      6.创建触发器： SQL语句：  7.测试触发器： 测试所用SQL语句：  Book005表之后的数据如下：  测试触发器之后的stock005如下：   与之前插入的数据不同，说明触发器编译成功     8.创建存储过程： SQL语句如下：   9.调用存储过程： 使用SQL语句：select * from countsale() 执行结果：   九、总结及心得体会： 通过此次实验，我学会了更多关于数据库基础操作的使用方法，而且也打深了自己的基础，对于许多基础操作有了更好的掌握。 十、对本实验过程及方法、手段的改进建议： 在实验中，可以添加更多具有挑战性的实验内容，这样有助于学生加深对于数据库的操作理解                                                                                  电 子 科 技 大 学 实   验   报   告  一、实验二：图书销售管理系统数据库SQL应用编程 二、实验学时：4    三、实验目的 了解该DBMS系统对数据库管理的内容与方法，特别是理解数据库安全机制和作用，以及PostgreSQL数据库角色管理、用户管理、权限管理的基本方法，培养数据库管理能力。在图书销售管理系统数据库中，创建必要的角色和用户，并完成上述角色与用户的权限管理。 四、实验原理 1.设计数据存取权限控制模型，对各角色进行不同权限的赋予，保证数据库数据的安全性。 2.使用SQL语句进行角色、用户的创建、对角色进行权限赋予、对用户分派角色。 3.使用不同的用户登陆时，就拥有了该用户的权限，在对数据库表进行操作时就会受到不同程度的约束。 五、实验内容 使用pgAdmin4数据库管理工具对图书销售管理系统数据库进行数据库安全管理，具体实验内容如下: 1.针对图书销售管理系统数据库，设计数据存取权限控制模型。 2.在数据库中，创建客户（R_Customer005）、商家（R_Seller005）角色。 3.在数据库中，根据业务规则为客户（R_Customer005）、商家（R_Seller005）角色赋予数据库对象权限。 4.在数据库中，分别创建客户用户U_Customer005、商家用户U_Seller005。 5.分别为客户用户U_Customer005、商家用户U_Seller005分派客户（R_Client005）、商家（R_Seller005）角色。 6.分别以客户用户U_Customer005、商家用户U_Seller005身份访问图书销售管理数据库，验证所实现数据存取权限控制模型的正确性。 在实验计算机上，利用pgAdmin4数据库管理工具及SQL语句，完成图书销售管理系统数据库安全管理，同时记录实验过程的步骤、操作、运行结果界面等数据，为撰写实验报告提供素材。 六、实验设备及环境 “数据库原理及应用”实验所涉及的机房硬件设备为pc计算机、服务器以及网络环境，pc计算机与服务器在同一局域网络。 操作系统： Windows7 / Windows XP 管理工具： pgAdmin4 DBMS系统： PostgreSQL 11 七、实验步骤 1.针对图书销售管理系统，在设计数据存取权限控制模型。 2.在pgAdmin4中的BookSale_2017221303005数据库中，使用SQL语句创建客户（R_Customer005）角色、商家（R_Seller005）角色。 3.在pgAdmin4中，根据第一步设计的数据存取权限控制模型对客户（R_Customer005）角色、商家（R_Seller005）角色赋予所定义的数据库对象权限 4.在pgAdmin4中，分别创建客户用户U_Customer005、商家用户U_Seller005，并为客户用户分配客户角色，为商家用户分配商家角色。 5.分别以客户用户U_Customer005、商家用户U_Seller005身份访问图书销售管理数据库，并分别以这两个用户对各数据库表进行操作，以验证是否正确分配了两用户不同的角色权限。  八、实验数据及结果分析 1.创建客户角色和商家角色： SQL语句：      2.赋予客户、商家角色权限： SQL语句：     3.创建客户用户和商家用户，将客户角色和商家角色赋予给他们： SQL语句：  4.分别用客户用户和商家用户验证是否赋予权限成功： 首先登陆客户用户：  查询book005功能可以运行。  从book005中删除数据由于权限不够所以无法进行。  查看auther005表可以正常运行。  往auther005中插入数据由于权限不足所以无法进行。  查看sale005由于权限不足无法进行         2.	登陆商家用户：  查看customer005操作如下：   插入一条数据到auther中：        插入成功  测试从stock中删除数据：  权限不足  更新sale005中的数据：     结论：通过以上对与角色权限的测试，可以看到，各个角色权限都符合之前的设计。 九、总结及心得体会 通过这次实验，我更好的体会到了多角色对于建立用户时的方便，而不至于没建立一个新的用户就赋予一次权限。       报告评分：                                          指导教师签字